name: Windows-build-CI

on:
  push:
    branches:
      - '*'
    tags:
      - '*'

jobs:
  build:
    env:
      APP_NAME: windows-python-installer
    runs-on: windows-latest
    if: contains(github.ref, 'tags')
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install HTML Help Workshop as hhc.exe is need when build chm
        run: |
          rem unzip resources/html_help_workshop.zip
          resources\htmlhelp.exe /T:%cd%\html_help_workshop /C /Q
          echo %cd%\html_help_workshop>> %GITHUB_PATH%
        shell: cmd
      - name: Testing ${{ github.ref_name }}...
        run: |
          echo %PATH%
          where hh hhc
          echo GITHUB_REF_NAME: %GITHUB_REF_NAME%
          echo github.ref_name: ${{ github.ref_name }}
        shell: cmd
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Download source code of dependencies (OpenSSL, Tk, etc.)
        run: |
          call PCbuild/get_externals.bat
          call Tools/msi/get_externals.bat
        working-directory: cpython
        shell: cmd
      - name: Apply patches ...
        run: |
          git apply ../patches/layout.html.patch
          git apply ../patches/PythonBootstrapperApplication.cpp.patch
          git apply ../patches/exe_files.wxs.patch
          git status
          git diff
        working-directory: cpython
      - name: Copy api-ms-win-core-path-l1-1-0.dll to cpython/PCbuild/{win32,amd64}/
        run: |
          unzip resources/api-ms-win-core-path-blender-0.3.1.zip
          mkdir -p cpython/PCbuild/{win32,amd64}
          cp api-ms-win-core-path-blender/x86/api-ms-win-core-path-l1-1-0.dll cpython/PCbuild/win32/
          cp api-ms-win-core-path-blender/x64/api-ms-win-core-path-l1-1-0.dll cpython/PCbuild/amd64/
        shell: bash
      - name: Building ...
        run: |
          rem -b -> Incrementally build Python rather than rebuilding
          rem -D -> Do not build documentation
          rem --skip-pgo -> Build x64 installers without using PGO
          rem documentation is shared by all platforms, so we need to build it only once
          call Tools\msi\buildrelease.bat -x86 -b
          call Tools\msi\buildrelease.bat -x64 -b -D
        working-directory: cpython
        shell: cmd
      - name: Checking files ...
        run: |
          ls -l Doc/build/htmlhelp/ PCbuild/win32/en-us/ PCbuild/amd64/en-us/
        working-directory: cpython
        shell: bash
      - uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: |-
            cpython/Doc/build/htmlhelp/python*.chm; 
            cpython/PCbuild/win32/en-us/python-${{ github.ref_name }}-embed-win32.zip; 
            cpython/PCbuild/win32/en-us/python-${{ github.ref_name }}.exe; 
            cpython/PCbuild/amd64/en-us/python-${{ github.ref_name }}-embed-amd64.zip; 
            cpython/PCbuild/amd64/en-us/python-${{ github.ref_name }}-amd64.exe
          tags: true
          draft: false
          overwrite: true
