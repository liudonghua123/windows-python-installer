diff --git a/PCbuild/find_python.bat b/PCbuild/find_python.bat
index d0e4a86b01..e10f2f9682 100644
--- a/PCbuild/find_python.bat
+++ b/PCbuild/find_python.bat
@@ -6,6 +6,11 @@
 @rem changing any other persistent state.
 @rem
 
+@set _Py_D=%~dp0
+
+@rem First argument -q means only show the command in output
+@if '%1' EQU '-q' (shift && set _Py_Quiet=1)
+
 @rem No arguments provided means do full search
 @if '%1' EQU '' goto :begin_search
 
@@ -28,16 +33,16 @@
 @if NOT "%VIRTUAL_ENV%"=="" (set PYTHON="%VIRTUAL_ENV%\Scripts\python.exe") & (set _Py_Python_Source=found in virtual env) & goto :found
 
 @set _Py_EXTERNALS_DIR=%EXTERNALS_DIR%
-@if "%_Py_EXTERNALS_DIR%"=="" (set _Py_EXTERNALS_DIR=%~dp0\..\externals)
+@if "%_Py_EXTERNALS_DIR%"=="" (set _Py_EXTERNALS_DIR=%_Py_D%\..\externals)
 
 @rem If we have Python in externals, use that one
-@if exist "%_Py_EXTERNALS_DIR%\pythonx86\tools\python.exe" (set PYTHON="%_Py_EXTERNALS_DIR%\pythonx86\tools\python.exe") & (set _Py_Python_Source=found in externals directory) & goto :found
+@if exist "%_Py_EXTERNALS_DIR%\pythonx86\tools\python.exe" ("%_Py_EXTERNALS_DIR%\pythonx86\tools\python.exe" -Ec "import sys; assert sys.version_info[:2] >= (3, 8)" >nul 2>nul) && (set PYTHON="%_Py_EXTERNALS_DIR%\pythonx86\tools\python.exe") && (set _Py_Python_Source=found in externals directory) && goto :found || rmdir /Q /S "%_Py_EXTERNALS_DIR%\pythonx86"
 
 @rem If HOST_PYTHON is recent enough, use that
-@if NOT "%HOST_PYTHON%"=="" @%HOST_PYTHON% -Ec "import sys; assert sys.version_info[:2] >= (3, 8)" >nul 2>nul && (set PYTHON="%HOST_PYTHON%") && (set _Py_Python_Source=found as HOST_PYTHON) && goto :found
+@if NOT "%HOST_PYTHON%"=="" @%HOST_PYTHON% -Ec "import sys; assert sys.version_info[:2] >= (3, 9)" >nul 2>nul && (set PYTHON="%HOST_PYTHON%") && (set _Py_Python_Source=found as HOST_PYTHON) && goto :found
 
 @rem If py.exe finds a recent enough version, use that one
-@for %%p in (3.9 3.8) do @py -%%p -EV >nul 2>&1 && (set PYTHON=py -%%p) && (set _Py_Python_Source=found %%p with py.exe) && goto :found
+@for %%p in (3.10 3.9) do @py -%%p -EV >nul 2>&1 && (set PYTHON=py -%%p) && (set _Py_Python_Source=found %%p with py.exe) && goto :found
 
 @if NOT exist "%_Py_EXTERNALS_DIR%" mkdir "%_Py_EXTERNALS_DIR%"
 @set _Py_NUGET=%NUGET%
@@ -53,15 +58,18 @@
     @rem If it fails, retry with any available copy of Python
     @powershell.exe -Command Invoke-WebRequest %_Py_NUGET_URL% -OutFile '%_Py_NUGET%'
     @if errorlevel 1 (
-        @%_Py_HOST_PYTHON% -E "%~dp0\urlretrieve.py" "%_Py_NUGET_URL%" "%_Py_NUGET%"
+        @%_Py_HOST_PYTHON% -E "%_Py_D%\urlretrieve.py" "%_Py_NUGET_URL%" "%_Py_NUGET%"
     )
 )
-@echo Installing Python via nuget...
+
+@if not "%_Py_Quiet%"=="1" @echo Installing Python via nuget...
 @"%_Py_NUGET%" install pythonx86 -ExcludeVersion -OutputDirectory "%_Py_EXTERNALS_DIR%"
 @rem Quote it here; it's not quoted later because "py -x.y" wouldn't work
 @if not errorlevel 1 (set PYTHON="%_Py_EXTERNALS_DIR%\pythonx86\tools\python.exe") & (set _Py_Python_Source=found on nuget.org) & goto :found
 
 
+@set _Py_D=
+@set _Py_Quiet=
 @set _Py_Python_Source=
 @set _Py_EXTERNALS_DIR=
 @set _Py_NUGET=
@@ -70,9 +78,12 @@
 @exit /b 1
 
 :found
-@echo Using %PYTHON% (%_Py_Python_Source%)
+@if "%_Py_Quiet%"=="1" (@echo %PYTHON%) else @echo Using %PYTHON% (%_Py_Python_Source%)
+
+@set _Py_D=
+@set _Py_Quiet=
 @set _Py_Python_Source=
 @set _Py_EXTERNALS_DIR=
 @set _Py_NUGET=
 @set _Py_NUGET_URL=
-@set _Py_HOST_PYTHON=
+@set _Py_HOST_PYTHON=
\ No newline at end of file
